 int minSubarray(vector<int>& nums, int p) {
        int n=nums.size();
       long long int sum=0;
        for(auto&it:nums)
        sum+=it;
        if(sum%p==0)
        return 0;
        int rem=sum%p;
        unordered_map<int,int>mp;
        mp[0]=-1;
        long long psum=0;
        int ans=n;
        for(int i=0;i<n;i++)
        {
             psum+=nums[i];
            int rem2=psum%p;
            // if(rem==rem2)
            // ans=min(ans,i+1);
            if(mp.find(rem2-rem)!=mp.end())
            {
                ans=min(ans,i-mp[rem2-rem]);
            }
            else  if(mp.find(rem2-rem+p)!=mp.end())
            {
                ans=min(ans,i-mp[rem2-rem+p]);
            }
         
            mp[rem2]=i;
        }
        if(ans>=n)
        return -1;
        return ans;

        
        
    }