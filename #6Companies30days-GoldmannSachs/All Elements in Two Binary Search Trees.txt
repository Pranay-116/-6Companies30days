/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
vector<int>v1,v2,v3;
   void f(TreeNode*root,vector<int>&v)
   {
       if(root==nullptr)
       return ;
       f(root->left,v);
       v.push_back(root->val);
       f(root->right,v);
       //return v;
   }
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        f(root1,v1);
        f(root2,v2);
        int sz=v1.size()+v2.size();
        v3.resize(sz);
        int i=0,j=0,k=0;
        while(i<v1.size()&&j<v2.size())
        {
            if(v1[i]<v2[j])
            {
                v3[k++]=v1[i];
                i++;
            }
            else
            {
                v3[k++]=v2[j];
                j++;
            }
        }
        while(i<v1.size())
        v3[k++]=v1[i++];
        while(j<v2.size())
        v3[k++]=v2[j++];
        return v3;
    }
};