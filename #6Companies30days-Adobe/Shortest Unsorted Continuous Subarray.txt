 int findUnsortedSubarray(vector<int>& nums) {
        int l=0;
            int n=nums.size();
        int r=n-1;
         if(n==1)
         return 0;
        for(int i=0;i<n-1;i++)
        {
            if(nums[i]>nums[i+1])
            {
                
                break;
            }
            else
            l++;
        }
         for(int i=n-1;i>0;i--)
        {
            if(nums[i]<nums[i-1])
            {
               // r=i;
                break;
            }
            else
            r--;
        }
        int mini=INT_MAX;
        int maxi=INT_MIN;
        for(int i=l;i<=r;i++)
        {
            maxi=max(maxi,nums[i]);
            mini=min(mini,nums[i]);
        }
        for(int i=0;i<l;i++)
        {
            if(nums[i]>mini)
            {
                l=i;
                break;
            }
        }
        for(int i=n-1;i>r;i--)
        {
            if(nums[i]<maxi)
            {
                r=i;
                break;
            }
        }
        cout<<l<<" "<<r<<endl;
       if(l>r)
       return 0;
       else
       return r-l+1;
        
    }