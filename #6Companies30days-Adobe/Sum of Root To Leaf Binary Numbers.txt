/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   int final_ans;
   void f(TreeNode*root,string res,int ans)
   {
       if(root==nullptr)
       return;
       
       if(root->left==nullptr&&root->right==nullptr)
       {
               res.push_back(root->val+'0');
       if(root->val==1)
       ans=ans*2+1;
       else
       ans=ans*2;
           cout<<ans<<endl;
          final_ans+=(ans);
          res.pop_back();
          ans=ans/2;
          return;
       }
       res.push_back(root->val+'0');
       if(root->val==1)
       ans=ans*2+1;
       else
       ans=ans*2;
       f(root->left,res,ans);
       f(root->right,res,ans);
       ans=ans/2;
       res.pop_back();
       return;
   }
    int sumRootToLeaf(TreeNode* root) {
    final_ans=0;
        string res="";
        int ans=0;
        f(root,res,ans);
         

     
        return final_ans;

        
    }
};