class Solution {
public:
    int minMutation(string start, string end, vector<string>& bank) {
        queue<string>q;
        unordered_set<string>st;
        q.push(start);
        st.insert(start);
        int c=0;
        while(q.size()>0)
        {
            int sz=q.size();
            for(int i=0;i<sz;i++)
            {
                auto x=q.front();
                q.pop();
                if(x==end)
                return c;
                for(char c:"ACGT")
                {
                   
                    for(int j=0;j<x.size();j++)
                    {
                         string node=x;
                        node[j]=c;
                        if(st.count(node)==0&&find(bank.begin(),bank.end(),node)!=bank.end()){
                        q.push(node);
                        st.insert(node);}
                    }
                }
            }
            c++;
        }
        return -1;
    }
};